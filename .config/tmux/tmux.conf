# base
unbind -a
set-option -g history-limit 100000
set -sg escape-time 0
set -g status-interval 1
set -g base-index 1
setw -g pane-base-index 1
set-option -g focus-events on
set-option -g renumber-windows on
set -g mode-keys vi
set -g prefix None
set -s set-clipboard external
set -g status off
set -g status-keys emacs # for easy escape

# maps
bind -n C-t run "/run/current-system/sw/bin/tmux setenv PREVIOUS_DIR '#{pane_current_path}'; /run/current-system/sw/bin/tmux new-window"
bind -n C-w kill-pane

bind -n M-Escape copy-mode
bind -n M-Tab next-window

bind -n M-w display-message '#S #{pane_current_path}'
bind -n M-e command-prompt -p "edit:" -I "#S" "rename '%1'"
bind -n M-Enter run "/run/current-system/sw/bin/tmux setenv PREVIOUS_DIR '#{pane_current_path}'; [[ $(($(/run/current-system/sw/bin/tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] \
                     && /run/current-system/sw/bin/tmux splitw -v \
                     || /run/current-system/sw/bin/tmux splitw -h" 

# vi mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe
bind -T copy-mode-vi M-Escape send -X cancel
bind -T copy-mode-vi M-Left select-pane -L 
bind -T copy-mode-vi M-Down select-pane -D 
bind -T copy-mode-vi M-Up select-pane -U   
bind -T copy-mode-vi M-Right select-pane -R

# theming
set -g default-terminal "screen-256color"
set-option -sa terminal-features ',xterm-kitty:Tc'
set-option -g status-position top
set-option -g pane-active-border-style "fg=#000000"
set-option -g pane-border-style "fg=#000000"
set-option -g popup-border-lines rounded
set -g status-style "bg=default"
set -g status-left-length 150
set -g status-left ""
set -g window-status-current-format ""
set -g window-status-format ""
set -g status-right-length 150
set -g status-right ""
set -g window-status-separator "#[bg=default]"
set -g message-style "fg=default,bg=default,noreverse"
set -g mode-style "fg=default,bg=default,reverse"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# mode switching
bind -T root "C-Delete" \
  set prefix None \;\
  set key-table off \;\
  set -g status on \;\
  set -g status-right "#[fg=brightred,bold,bg=default]tmux bindings removed: <ctrl-delete> to restore" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S
bind -T off "C-Delete" \
  set -u prefix \;\
  set -u key-table \;\
  set -g status off \;\
  set -g status-right "" \;\
  refresh-client -S
